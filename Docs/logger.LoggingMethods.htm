<html>
<head>
<title>IR Framework:  logger Logging Methods</title>
<link rel="stylesheet" type="text/css" href="scripts.css" />

</head>

<body style="font-family: tahoma; ">

<h2>IR Framework</h2>


<table width="100%" height="90%" style="table-layout: fixed; ">
	<tr valign="top">
		<td style="width: 2.2in; ">
			<iframe id="frScriptMenu" 
					frameborder="0" 
					height="100%" 
					width="100%" 
					src="menu.htm"></iframe>
		</td>
		<td>
			<span id="spScriptInfo" style="height: 100%; width: 100%; overflow: auto; ">
				<h4>logger.LEVEL Constants</h4>
				
				Contains the constant values for the log level of a <b>logger</b> object.<br />
				
				<pre style="background-color: eef; 
					  border-bottom-style: solid; 
					  border-bottom-color: ccc; 
					  border-bottom-width: 1px; 
					  padding-left: 50px; "><i><b>object</b></i>.<b>trace(<i>message</i>)</b>
<i><b>object</b></i>.<b>debug(<i>message</i>)</b>
<i><b>object</b></i>.<b>info(<i>message</i>)</b>
<i><b>object</b></i>.<b>warn(<i>message</i>)</b>
<i><b>object</b></i>.<b>error(<i>message</i>)</b>
<i><b>object</b></i>.<b>fatal(<i>message</i>)</b></pre>
				
				<br />
				<h4>Arguments</h4>
				<span style="width: 500px; ">
					<dl>
						<dt>object</dt>
						<dd>Required. Always the name of a <b>logger</b> object.</dd>
						<br /><br />
						
						<dt>message</dt>
						<dd>Required. The information to send to the log.</dd>
						<br /><br />
					</dl>
				</span>
				
				
				<br />
				<h4>Remarks</h4>
				Logging methods that succeed write the current date, current 
				time, user name, computer name, application type, document 
				type, document url, and a message to the log file.
			
				<table width="100%">
					<tr>
						<td class="tableHead">condition</td>
						<td class="tableHead">return value</td>
					</tr>
					<tr>
						<td class="tableData"><i>message</i> or <i>message</i>.toString() is not a string</td>
						<td class="tableData">3<br />An empty log entry is written.</td>
					</tr>
					<tr>
						<td class="tableData">Logger level is greater than logger method level</td>
						<td class="tableData">1<br />No log entry is written.</td>
					</tr>
					<tr>
						<td class="tableData">Logger level is less than or equal to the logger method level and <i>message</i> is valid.</td>
						<td class="tableData">0<br />A log entry is written.</td>
					</tr>
					<tr>
						<td class="tableData">An unhandled error occurred.</td>
						<td class="tableData">4</td>
					</tr>
				</table>
			
					The following example illustrates the use of the <b>LEVEL</b> constants.
					<br /><br />
					
					<pre><font color="888888">//	create a logger and set the level to DEBUG and write entries to the Console window</font>
var myLogger = new Application.logger();
myLogger.Level(myLogger.LEVEL.DEBUG);

<b>myLogger.trace("trace");	<font color="888888">//	TRACE is lower than DEBUG, so this won't do anything</font>
myLogger.debug("debug");
myLogger.error("error");</b>


<font color="888888">//	make the logger write entries to My Documents\mylog.log</font>
myLogger.Target("mylog.log");

<b>var a = myLogger.trace("trace");	<font color="888888">//	returns 1</font>
var b = myLogger.debug("debug");	<font color="888888">//	returns 0</font>
myLogger.error("error");</b></pre>
				</span>
			
				<br />
				<br />
				<h4>Applies To:</h4>
				<span style="width: 500px; ">
					<a href="loggerObject.htm"><b>logger Object</b></a>
				</span>

				
				<br /><br />
				<br /><br />
				<h4>Requirements</h4>
				<span style="width: 500px; ">
				</span>
			</span>
		</td>
	</tr>
</table>



</body>
</html>
