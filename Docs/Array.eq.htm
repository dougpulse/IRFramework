<html>
<head>
<title>IR Framework:  Array.eq Method</title>
<link rel="stylesheet" type="text/css" href="scripts.css" />

</head>

<body style="font-family: tahoma; ">

<h2>IR Framework</h2>


<table width="100%" height="90%" style="table-layout: fixed; ">
	<tr valign="top">
		<td style="width: 2.2in; ">
			<iframe id="frScriptMenu" 
					frameborder="0" 
					height="100%" 
					width="100%" 
					src="menu.htm"></iframe>
		</td>
		<td>
			<span id="spScriptInfo" style="height: 100%; width: 100%; overflow: auto; ">
			<h4>Array.eq Method</h4>

			Compares two arrays for equality.<br />

			<pre style="background-color: eef;
				  border-bottom-style: solid;
				  border-bottom-color: ccc;
				  border-bottom-width: 1px;
				  padding-left: 50px; "><i><b>object</b></i>.<b>eq</b> (<i>arr</i>)</pre>

			<br />
			<h4>Arguments</h4>

			<dl>
			<dt>object</dt>
			<dd>Required. Always the name of an <b>Array</b> object.</dd>
			<br /><br />

			<dt>arr</dt>
			<dd>Required. Array to compare.</dd>
			<br /><br />
			</dl>
			
			
			<br />
			<h4>Return Value</h4>
			The <b>Array.eq</b> method returns the following values:
			
			<table width="100%">
				<tr>
					<td class="tableHead">If</td>
					<td class="tableHead"><b>Array.eq</b> returns</td>
				</tr>
				<tr>
					<td class="tableData"><i>arr</i> is not an <b>Array</b>, 
					<i>arr</i>.length != <i>object</i>.length, or any of the values contained 
					in <i>arr</i> don't match the values of the elements with the same 
					index in <i>object</i></td>
					<td class="tableData">false</td>
				</tr>
				<tr>
					<td class="tableData">the arrays appear to be equal</td>
					<td class="tableData">true</td>
				</tr>
			</table>
			
			
			<br />
			<h4>Remarks</h4>
			The Array.eq method currently handles the comparison of arrays containing 
			objects of types <b>Number</b>, <b>String</b>, <b>Boolean</b>, or <b>Array</b>.  
			Comparing arrays containing other types of objects will usually return false.  
			An attempt to convert between string, number, and boolean types is made 
			before comparison.  See below for an example.<br />
			The following example illustrates the use of the <b>Array.eq</b> method.
			<br /><br />
			
			<pre><font color="888888">//	Compare the selected values to the values represented 
//	in the displayed information</font>
arrSelectedValues["Region"] = drpRegion.Item(drpRegion.SelectedIndex);
arrSelectedValues["Bien"] = drpBien.Item(drpBien.SelectedIndex);
if (!arrQueriedValues.eq(arrSelectedValues)) {
	<font color="888888">//	do something</font>
	...
	...
	ActiveDocument.Sections["Q-MyQuery"].Process();
	<font color="888888">//	now that we've re-run the query(ies) or refreshed 
	//	the pivot(s), update the array to indicate that</font>
	arrQueriedValues["Region"] = drpRegion.Item(drpRegion.SelectedIndex);
	arrQueriedValues["Bien"] = drpBien.Item(drpBien.SelectedIndex);
}
else {
	<font color="888888">//	input matches currently displayed information
	//	so don't process the queries or refresh the pivots</font>
}



<font color="888888">//	This example demonstrates the ability to compare arrays of arrays 
//	and the data type conversion inherent in the comparison routine</font>
var A = new Array(1, 2, new Array(4, "5", 6));
var B = new Array(1, 2, new Array(4, 5, 6));
Alert(A.eq(B));		<font color="888888">//	returns true</font>
</pre>
			
			<!-- <br />
			<br />
			<h4>Applies To:</h4>
			<a href="DictionaryObject.htm"><b>Dictionary Object</b></a>


			<br /><br /> -->
			<br /><br />
			<h4>Requirements</h4>
			</span>
		</td>
	</tr>
</table>



</body>
</html>
